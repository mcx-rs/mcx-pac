#[doc = "{{ description_escape(reg.description) }}"]
pub mod {{ sanitize_str(name) }} {
    {% for field in reg.fields -%}
    #[doc = "{{ description_escape(field.description) }}"]
    pub mod {{ sanitize_str(field.name) }} {
        pub const offset: u32 = {{ field.bit_offset }};
        pub const mask: u32 = {{ width_to_mask(field.bit_width) }} << offset;
        {% if field.enumerated_values.__len__() == 0 -%}
        pub mod R {}
        pub mod W {}
        pub mod RW {}
        {% else -%}
        {% if field.access.value == "write-only" -%}
        pub mod R {}
        pub mod W {
            {% for e in field.enumerated_values[0].enumerated_values_map -%}
            #[doc = "{{ description_escape(e.description) }}"]
            pub const {{ sanitize_str(e.name).upper() }}: u32 = {{ e.value }};
            {% endfor %}
        }
        pub mod RW {}
        {% elif field.access.value == "read-only" -%}
        pub mod R {
            {% for e in field.enumerated_values[0].enumerated_values_map -%}
            #[doc = "{{ description_escape(e.description) }}"]
            pub const {{ sanitize_str(e.name).upper() }}: u32 = {{ e.value }};
            {% endfor %}
        }
        pub mod W {}
        pub mod RW {}
        {% elif field.access.value == "read-write" -%}
        pub mod R {}
        pub mod W {}
        pub mod RW {
            {% for e in field.enumerated_values[0].enumerated_values_map -%}
            #[doc = "{{ description_escape(e.description) }}"]
            pub const {{ sanitize_str(e.name).upper() }}: u32 = {{ e.value }};
            {% endfor %}
        }
        {%- endif %}
        {%- endif %}
    }
    {% endfor %}
}
